generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  MODERATOR
  USER
}

model RefreshTokens {
  id     String @id @default(uuid())
  userId String @map("user_id")

  hashedToken String  @map("hashed_token")
  revoked     Boolean @default(false)
  user        User    @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("refresh_tokens")
}

model User {
  id             String          @id @default(uuid())
  email          String          @unique
  name           String          @unique
  role           Role            @default(USER)
  password       String
  profile        Profile?
  comments       Comment[]
  reviews        Review[]
  refresh_tokens RefreshTokens[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("user")
}

model Profile {
  id     String  @id
  user   User    @relation(fields: [id], references: [id])
  avatar String?

  @@map("profile")
}

model Anime {
  id       String    @id
  rating   Review[]
  comments Comment[]

  @@map("anime")
}

model Review {
  id      String @id @default(uuid())
  value   Int
  anime   Anime  @relation(fields: [animeId], references: [id])
  animeId String @map("anime_id")
  User    User   @relation(fields: [userId], references: [id])
  userId  String

  @@map("rating")
}

model Comment {
  id      String @id @default(uuid())
  content String

  animeId String @map("anime_id")
  anime   Anime  @relation(fields: [animeId], references: [id])

  authorId String @map("author_id")
  author   User   @relation(fields: [authorId], references: [id])

  parentId String?   @map("parent_id")
  parent   Comment?  @relation("CommentReplies", fields: [parentId], references: [id], onDelete: Cascade)
  replies  Comment[] @relation("CommentReplies")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("comment")
}
